generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

model User {
  id        String      @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())

  groups        GroupMember[]
  predictions   Prediction[]
  ownedGroups   Group[] @relation("GroupOwner")
}

model Group {
  id        String     @id @default(uuid())
  name      String
  isPublic  Boolean  @default(true)
  ownerId   Int
  createdAt DateTime @default(now())

  owner       User         @relation("GroupOwner", fields: [ownerId], references: [id])
  members     GroupMember[]
  predictions Prediction[]
}

model GroupMember {
  id      Int   @id @default(autoincrement())
  userId  Int
  groupId Int

  user  User  @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id])
}

model Match {
  id        String      @id @default(uuid())
  competition String
  player1   String
  player2   String
  startTime DateTime
  score     String?
  winner    String?

  predictions Prediction[]
}

model Prediction {
  id        String      @id @default(uuid())
  userId    Int
  groupId   Int
  matchId   Int
  winner    String
  createdAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [id])
  group Group @relation(fields: [groupId], references: [id])
  match Match @relation(fields: [matchId], references: [id])
}
